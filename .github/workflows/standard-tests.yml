# This workflow will:
#   - download and start a NCTL docker image
#   - upload the nctl assets as a project artifact
#   - download the latest casper-java-sdk and build the jar
#   - upload the sdk jar as a project artifact
#   - download the test platform
#   - download the project artifacts and move to the required directories
#   - run the cucumber tests via gradle


name: CSPR Python SDK Standard Tests
on:
  workflow_dispatch:
jobs:
  build:
    name: Setting Up NCTL
    runs-on: ubuntu-latest
    services:
      storm-nctl:
        image: makesoftware/casper-nctl:latest
        options: --name storm-nctl
        env:
          PREDEFINED_ACCOUNTS: 'true'
          MINIMUM_ROUND_EXPONENT: '12'
          MAXIMUM_ROUND_EXPONENT: '14'
          DEPLOY_DELAY: '30sec'
        ports:
          - 11101:11101
          - 14101:14101
          - 18101:18101
    steps:
      # Build the assets folder from the started NCTL docker image
      - name: Preparing NCTL assets on the started NCTL docker image
        run: |
          echo "Wait for NCTL"
          sleep 30s
          mkdir assets
          docker cp storm-nctl:/home/casper/casper-node/utils/nctl/assets/net-1/chainspec assets
          docker cp storm-nctl:/home/casper/casper-node/utils/nctl/assets/net-1/users assets
          mv assets/users assets/net-1
          mv assets/chainspec assets/net-1/chainspec          

      # Upload the NCTL assets to a project artifact
      - name: Upload NCTL assets to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nctl-accounts
          path: |
            assets/net-1/chainspec/accounts.toml
            assets/net-1/user-*

      # Checkout the latest Casper Python SDK from their repo ready for a build
#       - name: Checkout SDK source code
#         uses: actions/checkout@v2
#         with:
#           repository: casper-network/casper-java-sdk
#           ref: main
#           path: casper-java-sdk


      # Build the SDK 
#       - name: Build SDK JAR
#         working-directory: casper-java-sdk
#         run: ./gradlew clean build

      # Upload the built SDK  as a project artifact
#       - name: Upload SDK jar to artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: casper-java-sdk-jar
#           path: |
#             casper-java-sdk/build/libs/*.jar

      # Checkout the test platform Python code
#       - name: Checkout test platform code
#         uses: actions/checkout@v2
#       - name: Set up JDK 11
#         uses: actions/setup-java@v2
#         with:
#           java-version: '11'
#           distribution: 'adopt'

      # Download the NCTL assets artifact
      - name: Download NCTL assets artifact
        uses: actions/download-artifact@v3
        with:
          name: nctl-accounts

      # Download the SDK Python artifact
#       - name: Download casper-java-sdk-jar artifact
#         uses: actions/download-artifact@v3
#         with:
#           name: casper-java-sdk-jar

      # Gradle needs execute permissions
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Move the downloaded assets to their required folders
      # Run the actual cucumber tests
      - name: Copy artifacts and test with cucumber
        run: |
          mkdir -p assets/net-1
          mv chainspec/ assets/net-1
          mv user-*/ assets/net-1          
          rm -rf libs
          mkdir libs
          mv *.jar libs                   
          ./gradlew clean cucumberCli
